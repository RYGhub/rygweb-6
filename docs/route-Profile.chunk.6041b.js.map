{"version":3,"sources":["webpack:///./components/Static/DotaMini.less","webpack:///./components/Dynamic/ChangeAvatarBox.js","webpack:///./components/Static/DotaMini.js","webpack:///./components/Static/Mini.js","webpack:///./hooks/useFormChangePassword.js","webpack:///./routes/Profile.js","webpack:///./components/Static/SteamMini.js","webpack:///./components/Dynamic/LogoutBox.js","webpack:///./components/Dynamic/ChangeAvatarBox.less","webpack:///./components/Static/LinkedAccountsBox.js","webpack:///./components/Static/LinkedAccountsBox.less","webpack:///./hooks/useUrl.js","webpack:///./components/Static/SteamMini.less","webpack:///./components/Dynamic/ChangePasswordBox.js","webpack:///./components/Static/Mini.less"],"names":["module","exports","props","defaultAvatar","currentAvatar","useUrl","avatarUrl","setAvatarUrl","avatarUrlStatus","useState","validity","setValidity","instanceUrl","useContext","RoyalnetInstanceUrl","loginStatus","RoyalnetLoginStatus","displayedAvatarUrl","Validity","OK","title","class","style","preview","src","type","name","label","onChange","getEventValue","value","onClick","DISABLED","icon","faSpinner","pulse","royalnetApiRequest","avatar_url","token","then","faCheck","message","catch","err","ERROR","faExclamationCircle","disabled","href","medal","stars","data","dota","rank","Math","floor","raw","sectionName","contents","steamid32","avatar","alt","persona_name","sectionWl","wins","captionWins","dash","losses","className","captionLosses","sectionRank","full","toLowerCase","concatClass","mini","children","password","useFormValidator","setStatus","length","WARNING","faExclamationTriangle","NONE","useRoyalnetData","uid","userData","userError","changeAvatarBox","changePasswdBox","logoutBox","user","logout","undefined","error","username","steam","profile_url","frame","sectionAccCreation","caption","dateTime","Date","account_creation_date","toISOString","toLocaleDateString","sectionButtons","steamid","button","buttoncontent","faUserPlus","logoutWorking","setLogoutWorking","logoutValidity","console","debug","route","minis","push","flex","defaultValue","url","Boolean","test","useFormChangePassword","setPassword","passwordStatus","new_password","revoked_tokens"],"mappings":"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","file":"route-Profile.chunk.6041b.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dota\":\"dota__25vGB\",\"sectionName\":\"sectionName__3Hhgz\",\"contents\":\"contents__1f5nI\",\"avatar\":\"avatar__1JzQ7\",\"sectionWl\":\"sectionWl__2Lu8I\",\"wins\":\"wins__1YRc5\",\"dash\":\"dash__3Q_E9\",\"losses\":\"losses__29qNM\",\"captionWins\":\"captionWins__191qC\",\"captionLosses\":\"captionLosses__1J6kd\",\"sectionRank\":\"sectionRank__2_jhs\",\"full\":\"full__18vNb\",\"stars\":\"stars__3DJg2\",\"medal\":\"medal__2UEol\",\"name\":\"name__3jFU2\"};","import useUrl from '../../hooks/useUrl';\r\nimport {\r\n\tFormButton,\r\n\tFormInput,\r\n\tgetEventValue,\r\n\tPanel, royalnetApiRequest,\r\n\tRoyalnetInstanceUrl,\r\n\tRoyalnetLoginStatus,\r\n\tValidity\r\n} from 'bluelib';\r\nimport { useContext, useState } from 'preact/hooks';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faExclamationCircle, faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport Avatar from '../Static/Avatar';\r\nimport style from \"./ChangeAvatarBox.less\"\r\n\r\nexport default function (props) {\r\n\tlet defaultAvatar = props.currentAvatar ? props.currentAvatar : \"\";\r\n\r\n\tconst [avatarUrl, setAvatarUrl, avatarUrlStatus] = useUrl(defaultAvatar);\r\n\tconst [validity, setValidity] = useState({});\r\n\tconst instanceUrl = useContext(RoyalnetInstanceUrl);\r\n\tconst loginStatus = useContext(RoyalnetLoginStatus);\r\n\r\n\tfunction save() {\r\n\t\tsetValidity({\r\n\t\t\tvalidity: Validity.DISABLED,\r\n\t\t\ticon: <FontAwesomeIcon icon={faSpinner} pulse={true}/>\r\n\t\t});\r\n\t\troyalnetApiRequest(instanceUrl, \"PUT\", \"/api/user/avatar/v2\", {\r\n\t\t\tavatar_url: avatarUrl,\r\n\t\t\ttoken: loginStatus.token\r\n\t\t}).then((data) => {\r\n\t\t\tsetValidity({\r\n\t\t\t\tvalidity: Validity.OK,\r\n\t\t\t\ticon: <FontAwesomeIcon icon={faCheck}/>,\r\n\t\t\t\tmessage: `Avatar cambiato con successo! Per vedere il nuovo avatar ovunque, ricarica la pagina.`,\r\n\t\t\t});\r\n\t\t}).catch((err) => {\r\n\t\t\tsetValidity({\r\n\t\t\t\tvalidity: Validity.ERROR,\r\n\t\t\t\ticon: <FontAwesomeIcon icon={faExclamationCircle}/>,\r\n\t\t\t\tmessage: err.message\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n\r\n\tlet displayedAvatarUrl = null;\r\n\tif(avatarUrlStatus.validity === Validity.OK) {\r\n\t\tdisplayedAvatarUrl = avatarUrl;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Panel title={\"Cambia avatar\"}>\r\n\t\t\t<p>\r\n\t\t\t\t<Avatar class={style.preview} src={displayedAvatarUrl}/>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<FormInput type={\"text\"} name={\"avatar_url\"} label={\"URL\"} onChange={getEventValue(setAvatarUrl)} validity={avatarUrlStatus} value={avatarUrl}/>\r\n\t\t\t\t<FormButton label={\"Salva\"} onClick={save} disabled={avatarUrlStatus.validity !== Validity.OK} validity={validity}>Salva modifiche</FormButton>\r\n\t\t\t</p>\r\n\t\t\t<blockquote>\r\n\t\t\t\tNon sai dove hostare il tuo avatar? Prova <a href={\"https://imgur.com/upload?beta\"}>imgur</a>!\r\n\t\t\t</blockquote>\r\n\t\t</Panel>\r\n\t);\r\n}\r\n","import style from './DotaMini.less';\r\nimport Mini from './Mini';\r\nimport Link from '../Dynamic/Link';\r\n\r\n\r\nexport default function (props) {\r\n\r\n\tlet medal = `https://www.opendota.com/assets/images/dota2/rank_icons/rank_icon_0.png`;\r\n\tlet stars = \"\";\r\n\tif(props.data.dota.rank) {\r\n\t\tmedal = `https://www.opendota.com/assets/images/dota2/rank_icons/rank_icon_${Math.floor(props.data.dota.rank.raw / 10)}.png`;\r\n\t\tstars = `https://www.opendota.com/assets/images/dota2/rank_icons/rank_star_${props.data.dota.rank.raw % 10}.png`;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Mini class={style.dota}>\r\n\t\t\t<div class={style.sectionName}>\r\n\t\t\t\t<Link icon={false} class={style.contents} href={`https://www.opendota.com/players/${props.data.steamid32}`}>\r\n\t\t\t\t\t<img class={style.avatar} src={props.data.avatar} alt={\"\"}/>\r\n\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t{props.data.persona_name}\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t\t<div class={style.sectionWl}>\r\n\t\t\t\t<div class={style.wins}>\r\n\t\t\t\t\t{props.data.dota.wins}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class={style.captionWins}>\r\n\t\t\t\t\tvittorie\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class={style.dash}>\r\n\t\t\t\t\t&nbsp;-&nbsp;\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class={style.losses}>\r\n\t\t\t\t\t{props.data.dota.losses}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={style.captionLosses}>\r\n\t\t\t\t\tsconfitte\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={style.sectionRank}>\r\n\t\t\t\t<div className={style.full}>\r\n\t\t\t\t\t<img className={style.stars}\r\n\t\t\t\t\t\t alt={\"\"}\r\n\t\t\t\t\t\t src={stars}/>\r\n\t\t\t\t\t<img className={style.medal}\r\n\t\t\t\t\t\t alt={\"\"}\r\n\t\t\t\t\t\t src={medal}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={style.name}>\r\n\t\t\t\t\t{props.data.dota.rank.medal.toLowerCase()} {props.data.dota.rank.rank}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Mini>\r\n\t);\r\n}\r\n","import style from './Mini.less';\r\nimport { concatClass } from 'bluelib';\r\n\r\n\r\nexport default function (props) {\r\n\treturn (\r\n\t\t<div class={concatClass(style.mini, props.class)}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import { useState } from 'preact/hooks';\nimport {useFormValidator} from 'bluelib';\nimport { Validity } from 'bluelib';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faEllipsisH, faExclamationTriangle, faKey, faQuestion } from '@fortawesome/free-solid-svg-icons';\n\nexport default function() {\n\tconst [password, setPassword] = useState(\"\");\n\tconst passwordStatus = useFormValidator(password, (value, setStatus) => {\n\t\tif(value.length === 0) {\n\t\t\tsetStatus({\n\t\t\t\tvalidity: Validity.NONE,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif(value.length < 12) {\n\t\t\tsetStatus({\n\t\t\t\tvalidity: Validity.WARNING,\n\t\t\t\ticon: <FontAwesomeIcon icon={faExclamationTriangle}/>,\n\t\t\t\tmessage: \"La password è un po' corta... Cerca di farla lunga almeno 12 caratteri.\",\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tsetStatus({\n\t\t\tvalidity: Validity.OK,\n\t\t\ticon: <FontAwesomeIcon icon={faCheck}/>\n\t\t});\n\t});\n\n\treturn [password, setPassword, passwordStatus]\n}\n","import { useContext } from 'preact/hooks';\nimport { Panel, RoyalnetLoginStatus, useRoyalnetData } from 'bluelib';\nimport LogoutBox from '../components/Dynamic/LogoutBox';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport ErrorBox from '../components/Static/ErrorBox';\nimport Avatar from '../components/Static/Avatar';\nimport { HZero } from 'bluelib';\nimport RoyalMarkdown from '../components/Static/RoyalMarkdown';\nimport ChangePasswordBox from '../components/Dynamic/ChangePasswordBox';\nimport ChangeAvatarBox from '../components/Dynamic/ChangeAvatarBox';\nimport LinkedAccountsBox from '../components/Static/LinkedAccountsBox';\n\nexport default function (props) {\n\tconst loginStatus = useContext(RoyalnetLoginStatus);\n\tconst [userData, userError] = useRoyalnetData(\"GET\", \"/api/user/ryg/v2\", {\n\t\tuid: props.uid\n\t});\n\n\tlet changeAvatarBox = null;\n\tlet changePasswdBox = null;\n\tlet logoutBox = null;\n\tif(loginStatus) {\n\t\t// noinspection EqualityComparisonWithCoercionJS\n\t\tif(loginStatus.user.uid == props.uid) {\n\t\t\tchangeAvatarBox = <ChangeAvatarBox currentAvatar={loginStatus.user.avatar_url}/>;\n\t\t\tchangePasswdBox = <ChangePasswordBox/>;\n\t\t\tlogoutBox = <LogoutBox logout={props.logout}/>;\n\t\t}\n\t}\n\n\tif(userError !== undefined) {\n\t\treturn (\n\t\t\t<ErrorBox error={userError}/>\n\t\t);\n\t}\n\n\tif(userData === undefined) {\n\t\treturn (\n\t\t\t<h0><Avatar src={\"https://combo.steffo.eu/open/ryg/GenericUser.png\"} alt={\"\"}/><FontAwesomeIcon icon={faSpinner} pulse={true}/></h0>\n\t\t)\n\t}\n\n\t/*\n\tlet bioBox = null;\n\tif(userData.bio) {\n\t\tbioBox = (\n\t\t\t<Panel title={\"Bio\"}>\n\t\t\t\t<RoyalMarkdown>\n\t\t\t\t\t{userData.bio.contents}\n\t\t\t\t</RoyalMarkdown>\n\t\t\t</Panel>\n\t\t)\n\t}\n    */\n\n\treturn (\n\t\t<div>\n\t\t\t<HZero>\n\t\t\t\t<Avatar data={userData}/> {userData.username}\n\t\t\t</HZero>\n\t\t\t<LinkedAccountsBox data={userData}/>\n\t\t\t{changeAvatarBox}\n\t\t\t{changePasswdBox}\n\t\t\t{logoutBox}\n\t\t</div>\n\t);\n}\n","import style from './SteamMini.less';\r\nimport Mini from './Mini';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport Link from '../Dynamic/Link';\r\n\r\n\r\nexport default function (props) {\r\n\r\n\treturn (\r\n\t\t<Mini class={style.steam}>\r\n\t\t\t<div class={style.sectionName}>\r\n\t\t\t\t<Link icon={false} class={style.contents} href={props.data.profile_url}>\r\n\t\t\t\t\t<span class={style.frame}>\r\n\t\t\t\t\t\t<img class={style.avatar} src={props.data.avatar} alt={\"\"}/>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t{props.data.persona_name}\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t\t<div class={style.sectionAccCreation}>\r\n\t\t\t\t<div class={style.caption}>\r\n\t\t\t\t\tAccount creato il\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class={style.value}>\r\n\t\t\t\t\t<time dateTime={new Date(props.data.account_creation_date).toISOString()}>\r\n\t\t\t\t\t\t{new Date(props.data.account_creation_date).toLocaleDateString()}\r\n\t\t\t\t\t</time>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class={style.sectionButtons}>\r\n\t\t\t\t<a href={`steam://friends/add/${props.data.steamid}`}>\r\n\t\t\t\t\t<div class={style.button}>\r\n\t\t\t\t\t\t<div class={style.buttoncontent}>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faUserPlus}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</Mini>\r\n\t);\r\n}\r\n","import { FormButton, Panel } from 'bluelib';\nimport { route } from 'preact-router';\nimport { useState } from 'preact/hooks';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport AnyLink from './Link';\n\nexport default function (props) {\n\tconst [logoutWorking, setLogoutWorking] = useState(false);\n\n\tfunction logout() {\n\t\tconsole.debug(\"Logging out...\");\n\t\tsetLogoutWorking(true);\n\t\tprops.logout();\n\t\troute(\"/\");\n\t}\n\n\tlet logoutValidity = {};\n\tif(logoutWorking) {\n\t\tlogoutValidity = {\n\t\t\ticon: <FontAwesomeIcon icon={faSpinner} pulse={true}/>\n\t\t}\n\t}\n\n\treturn (\n\t\t<Panel title={\"Logout\"}>\n\t\t\t<p>\n\t\t\t\tSenta, <AnyLink href={\"https://www.youtube.com/watch?v=KoC-M5yBKQ4\"}>dottoressa Frinzi</AnyLink>...\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<FormButton label={\"Logout\"} onClick={logout} disabled={logoutWorking} validity={logoutValidity}>Esci da questo posto di *****</FormButton>\n\t\t\t</p>\n\t\t</Panel>\n\t);\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preview\":\"preview__1zoOs\"};","import { Panel, Section } from 'bluelib';\r\nimport SteamMini from './SteamMini';\r\nimport style from './LinkedAccountsBox.less';\r\nimport DotaMini from './DotaMini';\r\n\r\nexport default function (props) {\r\n\tconst minis = [];\r\n\r\n\tfor(let steam of props.data.steam) {\r\n\t\tminis.push(<SteamMini data={steam}/>);\r\n\r\n\t\tif(steam.dota) {\r\n\t\t\tminis.push(<DotaMini data={steam}/>);\r\n\t\t}\r\n\t}\r\n\r\n\tif(minis.length === 0) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Panel title={\"Account connessi\"}>\r\n\t\t\t<div class={style.flex}>\r\n\t\t\t\t{minis}\r\n\t\t\t</div>\r\n\t\t</Panel>\r\n\t);\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"flex__2H8Wq\"};","import { useContext, useState } from 'preact/hooks';\nimport {useFormValidator} from 'bluelib';\nimport { royalnetApiRequest, RoyalnetInstanceUrl, Validity } from 'bluelib';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\n\nexport default function(defaultValue) {\n\tconst [url, setUrl] = useState(defaultValue);\n\tconst urlStatus = useFormValidator(url, (value, setStatus) => {\n\t\tif(value.length === 0) {\n\t\t\tsetStatus({\n\t\t\t\tvalidity: Validity.NONE,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif(!Boolean(/^https?:\\/\\/.*?[^/]$/.test(value))) {\n\t\t\tsetStatus({\n\t\t\t\tvalidity: Validity.ERROR,\n\t\t\t\ticon: <FontAwesomeIcon icon={faExclamationCircle}/>\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tsetStatus({\n\t\t\tvalidity: Validity.OK,\n\t\t\ticon: <FontAwesomeIcon icon={faCheck}/>\n\t\t})\n\n\t});\n\n\treturn [url, setUrl, urlStatus];\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"steam\":\"steam__aQYHQ\",\"sectionName\":\"sectionName__11fj0\",\"contents\":\"contents__Izjil\",\"frame\":\"frame__1kFZ3\",\"avatar\":\"avatar__x7P2u\",\"sectionAccCreation\":\"sectionAccCreation__1D_VC\",\"caption\":\"caption__1cteV\",\"value\":\"value__15rUo\",\"sectionButtons\":\"sectionButtons__7O_vs\",\"button\":\"button__1I0Lu\",\"buttoncontent\":\"buttoncontent__220gl\"};","import {\r\n\tFormButton,\r\n\tFormInput,\r\n\tgetEventValue,\r\n\tPanel,\r\n\troyalnetApiRequest,\r\n\tRoyalnetInstanceUrl, RoyalnetLoginStatus,\r\n\tValidity\r\n} from 'bluelib';\r\nimport useFormPassword from '../../hooks/useFormPassword';\r\nimport { useContext, useState } from 'preact/hooks';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faExclamationCircle, faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport useFormChangePassword from '../../hooks/useFormChangePassword';\r\n\r\nexport default function (props) {\r\n\tconst [password, setPassword, passwordStatus] = useFormChangePassword();\r\n\tconst [validity, setValidity] = useState({});\r\n\tconst instanceUrl = useContext(RoyalnetInstanceUrl);\r\n\tconst loginStatus = useContext(RoyalnetLoginStatus);\r\n\r\n\tfunction change() {\r\n\t\tsetValidity({\r\n\t\t\tvalidity: Validity.DISABLED,\r\n\t\t\ticon: <FontAwesomeIcon icon={faSpinner} pulse={true}/>\r\n\t\t});\r\n\t\troyalnetApiRequest(instanceUrl, \"PUT\", \"/api/user/passwd/v1\", {\r\n\t\t\tnew_password: password,\r\n\t\t\ttoken: loginStatus.token\r\n\t\t}).then((data) => {\r\n\t\t\tsetValidity({\r\n\t\t\t\tvalidity: Validity.OK,\r\n\t\t\t\ticon: <FontAwesomeIcon icon={faCheck}/>,\r\n\t\t\t\tmessage: `Password cambiata con successo! Sono state disconnesse ${data.revoked_tokens} altr${data.revoked_tokens !== 1 ? 'e' : 'a'} session${data.revoked_tokens !== 1 ? 'i' : 'e'}.`,\r\n\t\t\t});\r\n\t\t}).catch((err) => {\r\n\t\t\tsetValidity({\r\n\t\t\t\tvalidity: Validity.ERROR,\r\n\t\t\t\ticon: <FontAwesomeIcon icon={faExclamationCircle}/>,\r\n\t\t\t\tmessage: err.message\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Panel title={\"Cambia password\"}>\r\n\t\t\t<p>\r\n\t\t\t\tCambiare password è come cambiare le chiavi di casa: tutti i browser che prima avevano le chiavi ora dovranno farne una nuova copia, e quindi dovrai rifare il login ovunque. Sei sicuro di voler procedere?\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<FormInput type={\"password\"} name={\"password\"} label={\"Nuova password\"} onChange={getEventValue(setPassword)} validity={passwordStatus} value={password}/>\r\n\t\t\t\t<FormButton label={\"Cambia\"} onClick={change} disabled={validity.disabled || password.length === 0} validity={validity}>Cambia password</FormButton>\r\n\t\t\t</p>\r\n\t\t</Panel>\r\n\t);\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mini\":\"mini__iiQRg\"};"],"sourceRoot":""}