{"version":3,"sources":["webpack:///./routes/login.js","webpack:///./components/hbuttononce.js","webpack:///./components/loginbox.js"],"names":["Login","render","onSuccessfulLogin","this","props","left","Component","HButtonOnce","status","label","onClick","icon","faSpinner","pulse","disabled","faCheck","faExclamationCircle","toString","LoginBox","onUsernameChange","e","setState","target","value","onPasswordChange","onLoginClick","console","log","fetch","method","headers","body","JSON","stringify","state","username","password","then","r","json","j","success","data","error","inputDisabled","type","onChange","name"],"mappings":"8LAIqBA,E,gLACpBC,OAAA,WACC,OACC,aACC,EAAC,IAAD,CAAUC,kBAAmBC,KAAKC,MAAMF,oBACxC,EAAC,IAAD,CAAKG,KAAM,YACV,qEACwD,8BADxD,qDAGA,yG,GAT8BC,c,yKCEdC,E,gLACpBN,OAAA,WACC,MAAyB,YAAtBE,KAAKC,MAAMI,OACN,EAAC,IAAD,CAASC,MAAO,cAAON,KAAKC,MAAMK,OAAeC,QAASP,KAAKC,MAAMM,UAE/C,YAAtBP,KAAKC,MAAMI,OACX,EAAC,IAAD,CAASC,MAAO,cAAM,EAAC,IAAD,CAAiBE,KAAMC,IAAWC,OAAO,IAA/C,IAAwDV,KAAKC,MAAMK,OAAeK,UAAU,IAEtF,SAAtBX,KAAKC,MAAMI,OACX,EAAC,IAAD,CAASC,MAAO,cAAM,EAAC,IAAD,CAAiBE,KAAMI,MAA7B,IAAyCZ,KAAKC,MAAMK,OAAeK,UAAU,IAEvE,UAAtBX,KAAKC,MAAMI,OACX,EAAC,IAAD,CAASC,MAAO,cAAM,EAAC,IAAD,CAAiBE,KAAMK,MAA7B,IAAqDb,KAAKC,MAAMK,OAAeC,QAASP,KAAKC,MAAMM,UAGnH,EAAC,IAAD,wCAAwCP,KAAKC,MAAMI,OAAOS,a,GAf3BX,e,6JCApBY,G,sBAEpB,aAAc,aACb,sBAQDC,iBAAmB,SAAAC,GAClB,EAAKC,SAAS,CACb,SAAYD,EAAEE,OAAOC,SAXT,EAedC,iBAAmB,SAAAJ,GAClB,EAAKC,SAAS,CACb,SAAYD,EAAEE,OAAOC,SAjBT,EAqBdE,aAAe,WACd,EAAKJ,SAAS,CACb,OAAU,YAEXK,QAAQC,IAAR,sBACAC,MAAM,iDAAkD,CACvDC,OAAQ,OACRC,QAAS,GAKTC,KAAMC,KAAKC,UAAU,CACpB,SAAY,EAAKC,MAAMC,SACvB,SAAY,EAAKD,MAAME,aAEtBC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,MAAK,SAACG,GACzBA,EAAEC,SACJ,EAAKpB,SAAS,CACb,OAAU,SAEX,EAAKjB,MAAMF,kBAAkBsC,EAAEE,QAG/B,EAAKrB,SAAS,CACb,OAAU,UAEXK,QAAQiB,MAAMH,QA9ChB,EAAKN,MAAQ,CACZ,SAAY,GACZ,SAAY,GACZ,OAAU,WALE,E,kHAsDdjC,OAAA,WACC,IAAI2C,IAAwC,YAAtBzC,KAAK+B,MAAM1B,QAA8C,UAAtBL,KAAK+B,MAAM1B,QAEpE,OACC,EAAC,IAAD,CAAKH,KAAM,SACV,EAAC,IAAD,CAAQI,MAAO,WAAYoC,KAAM,OAAQtB,MAAOpB,KAAK+B,MAAMC,SAAUW,SAAU3C,KAAKgB,iBAAkBL,SAAU8B,EAAeG,KAAM,aACrI,EAAC,IAAD,CAAQtC,MAAO,WAAYoC,KAAM,WAAYtB,MAAOpB,KAAK+B,MAAME,SAAUU,SAAU3C,KAAKqB,iBAAkBV,SAAU8B,IACpH,EAAC,IAAD,CAAanC,MAAO,QAASC,QAASP,KAAKsB,aAAcjB,OAAQL,KAAK+B,MAAM1B,W,GA/D1CF,gB","file":"route-login.chunk.74f60.js","sourcesContent":["import { Component } from 'preact';\r\nimport LoginBox from '../components/loginbox';\r\nimport Box from '../components/box';\r\n\r\nexport default class Login extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<LoginBox onSuccessfulLogin={this.props.onSuccessfulLogin}/>\r\n\t\t\t\t<Box left={\"Biscotti\"}>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tEffettuando il login, verranno salvati alcuni dati nel <code>localStorage</code> del tuo browser per identificare il tuo account.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tNon sono esattamente cookie, ma penso che ti potrebbe interessare saperlo in ogni caso.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</Box>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import { Component } from 'preact';\r\nimport HButton from './hbutton';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faExclamationCircle, faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport Error from './error';\r\n\r\nexport default class HButtonOnce extends Component {\r\n\trender() {\r\n\t\tif(this.props.status === \"waiting\") {\r\n\t\t\treturn <HButton label={<span>{this.props.label}</span>} onClick={this.props.onClick}/>;\r\n\t\t}\r\n\t\telse if(this.props.status === \"running\") {\r\n\t\t\treturn <HButton label={<span><FontAwesomeIcon icon={faSpinner} pulse={true}/> {this.props.label}</span>} disabled={true}/>;\r\n\t\t}\r\n\t\telse if(this.props.status === \"done\") {\r\n\t\t\treturn <HButton label={<span><FontAwesomeIcon icon={faCheck}/> {this.props.label}</span>} disabled={true}/>;\r\n\t\t}\r\n\t\telse if(this.props.status === \"error\") {\r\n\t\t\treturn <HButton label={<span><FontAwesomeIcon icon={faExclamationCircle}/> {this.props.label}</span>} onClick={this.props.onClick}/>;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn <Error>Invalid status for HButtonOnce: {this.props.status.toString()}</Error>\r\n\t\t}\r\n\t}\r\n}\r\n","import { Component } from 'preact';\nimport Box from './box';\nimport HInput from './hinput';\nimport HButtonOnce from './hbuttononce';\nimport { route } from 'preact-router';\n\nexport default class LoginBox extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t\"username\": \"\",\n\t\t\t\"password\": \"\",\n\t\t\t\"status\": \"waiting\",\n\t\t}\n\t}\n\n\tonUsernameChange = e => {\n\t\tthis.setState({\n\t\t\t\"username\": e.target.value\n\t\t})\n\t};\n\n\tonPasswordChange = e => {\n\t\tthis.setState({\n\t\t\t\"password\": e.target.value\n\t\t})\n\t};\n\n\tonLoginClick = e => {\n\t\tthis.setState({\n\t\t\t\"status\": \"running\"\n\t\t});\n\t\tconsole.log(`Trying to login...`);\n\t\tfetch(\"https://rygapi.steffo.eu/api/login/royalnet/v1\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t//Fix this in Royalnet first\n\t\t\t\t//'Accept': 'application/json',\n\t\t\t\t//'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\t\"username\": this.state.username,\n\t\t\t\t\"password\": this.state.password\n\t\t\t})\n\t\t}).then(r => r.json()).then((j) => {\n\t\t\tif(j.success) {\n\t\t\t\tthis.setState({\n\t\t\t\t\t\"status\": \"done\"\n\t\t\t\t});\n\t\t\t\tthis.props.onSuccessfulLogin(j.data);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.setState({\n\t\t\t\t\t\"status\": \"error\"\n\t\t\t\t});\n\t\t\t\tconsole.error(j);\n\t\t\t}\n\n\t\t});\n\t};\n\n\trender() {\n\t\tlet inputDisabled = !(this.state.status === \"waiting\" || this.state.status === \"error\");\n\n\t\treturn (\n\t\t\t<Box left={\"Login\"}>\n\t\t\t\t<HInput label={\"Username\"} type={\"text\"} value={this.state.username} onChange={this.onUsernameChange} disabled={inputDisabled} name={\"username\"}/>\n\t\t\t\t<HInput label={\"Password\"} type={\"password\"} value={this.state.password} onChange={this.onPasswordChange} disabled={inputDisabled}/>\n\t\t\t\t<HButtonOnce label={\"Login\"} onClick={this.onLoginClick} status={this.state.status}/>\n\t\t\t</Box>\n\t\t);\n\t}\n}\n"],"sourceRoot":""}